{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amand\\\\Downloads\\\\Resturant_webapp-master\\\\Resturant_webapp-master\\\\src\\\\Component\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BookingForm from './BookingForm';\nimport { fetchAPI, submitAPI } from '../Api';\nimport { UserContext } from '../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const timeSlots = ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'];\nexport const occasion = ['Birthday', 'Anniversary'];\nexport const initializeTimes = selectedDate => {\n  let reservations = JSON.parse(localStorage.getItem('reservations')) || [];\n  const reservedTimes = reservations.filter(reservation => reservation.selectedDate === selectedDate).map(reservation => reservation.selectedTime);\n  const availableTimes = fetchAPI(new Date(selectedDate));\n  let updatedTimes = availableTimes.filter(slot => !reservedTimes.includes(slot));\n  return updatedTimes;\n};\nconst timesReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_TIMES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default function Main() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedOccasion, setSelectedOccasion] = useState('');\n  const [selectedNumber, setSelectedNumber] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [availableTimes, dispatchTimes] = useReducer(timesReducer, []);\n  const navigate = useNavigate();\n  const [isLoading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [dateError, setDateError] = useState('');\n  const [timeError, setTimeError] = useState('');\n  const [numberError, setNumberError] = useState('');\n  const [occasionError, setOccasionError] = useState('');\n  const {\n    username\n  } = useContext(UserContext);\n  const {\n    signInStatus\n  } = useContext(UserContext);\n  useEffect(() => {\n    const updatedTimes = initializeTimes(selectedDate);\n    dispatchTimes({\n      type: 'UPDATE_TIMES',\n      payload: updatedTimes\n    });\n  }, [selectedDate]);\n  const submitForm = e => {\n    e.preventDefault();\n    if (!signInStatus) {\n      alert('You must be signed in to make a reservation.');\n      return;\n    }\n    const formData = {\n      selectedDate,\n      selectedTime,\n      selectedNumber,\n      selectedOccasion\n    };\n    // use username as a key to store the booking\n    let reservations = JSON.parse(localStorage.getItem(`${username}-reservations`)) || [];\n    if (submitAPI(formData)) {\n      reservations.push(formData);\n      localStorage.setItem(`${username}-reservations`, JSON.stringify(reservations));\n    } else {\n      alert('Reservation failed. Please try again.');\n    }\n    console.log(formData);\n    submitAPI(formData);\n    setLoading(true);\n    setProgress(0);\n    const interval = setInterval(() => {\n      setProgress(prevProgress => {\n        const newProgress = prevProgress + 10;\n        if (newProgress === 100) {\n          clearInterval(interval);\n          setLoading(false);\n          navigate('/bookingpage/confirmation', {\n            state: formData\n          });\n        }\n        return newProgress;\n      });\n    }, 200);\n    setTimeout(() => {\n      clearInterval(interval);\n      setLoading(false);\n      navigate('/bookingpage/confirmation', {\n        state: formData\n      });\n    }, 2000); // wait 2 seconds before navigating\n  };\n\n  const updateTimes = date => {\n    const updatedTimes = initializeTimes(date);\n    dispatchTimes({\n      type: 'UPDATE_TIMES',\n      payload: updatedTimes\n    });\n  };\n  const validateForm = e => {\n    e.preventDefault();\n    setDateError('');\n    setTimeError('');\n    setNumberError('');\n    setOccasionError('');\n    let hasError = false;\n    if (!selectedDate) {\n      setDateError('Please select a date.');\n      hasError = true;\n    }\n    if (!selectedTime) {\n      setTimeError('Please select a time.');\n      hasError = true;\n    }\n    if (!selectedNumber) {\n      setNumberError('Please enter the number of guests.');\n      hasError = true;\n    }\n    if (!selectedOccasion) {\n      setOccasionError('Please select an occasion.');\n      hasError = true;\n    }\n    if (hasError) {\n      return;\n    }\n    submitForm(e);\n  };\n  const isFormValid = selectedDate && selectedTime && selectedNumber && selectedOccasion;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BookingForm, {\n      timeSlots: timeSlots,\n      availableTimes: availableTimes,\n      selectedTime: selectedTime,\n      setSelectedTime: setSelectedTime,\n      setAvailableTimes: updateTimes,\n      selectedDate: selectedDate,\n      setSelectedDate: setSelectedDate,\n      selectedOccasion: selectedOccasion,\n      setSelectedOccasion: setSelectedOccasion,\n      selectedNumber: selectedNumber,\n      setSelectedNumber: setSelectedNumber,\n      submitForm: submitForm,\n      occasion: occasion,\n      isLoading: isLoading,\n      progress: progress,\n      dateError: dateError,\n      setDateError: setDateError,\n      timeError: timeError,\n      setTimeError: setTimeError,\n      numberError: numberError,\n      setNumberError: setNumberError,\n      occasionError: occasionError,\n      setOccasionError: setOccasionError,\n      isFormValid: isFormValid,\n      validateForm: validateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"hVss9maG7TjSKIG5TSqSzoQa/aE=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useReducer","useEffect","useContext","useNavigate","BookingForm","fetchAPI","submitAPI","UserContext","jsxDEV","_jsxDEV","timeSlots","occasion","initializeTimes","selectedDate","reservations","JSON","parse","localStorage","getItem","reservedTimes","filter","reservation","map","selectedTime","availableTimes","Date","updatedTimes","slot","includes","timesReducer","state","action","type","payload","Main","_s","setSelectedDate","selectedOccasion","setSelectedOccasion","selectedNumber","setSelectedNumber","setSelectedTime","dispatchTimes","navigate","isLoading","setLoading","progress","setProgress","dateError","setDateError","timeError","setTimeError","numberError","setNumberError","occasionError","setOccasionError","username","signInStatus","submitForm","e","preventDefault","alert","formData","push","setItem","stringify","console","log","interval","setInterval","prevProgress","newProgress","clearInterval","setTimeout","updateTimes","date","validateForm","hasError","isFormValid","children","setAvailableTimes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amand/Downloads/Resturant_webapp-master/Resturant_webapp-master/src/Component/Main.js"],"sourcesContent":["import React, { useState, useReducer, useEffect, useContext} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BookingForm from './BookingForm';\nimport { fetchAPI, submitAPI } from '../Api';\nimport { UserContext } from '../UserContext';\n\nexport const timeSlots = [\n  '17:00',\n  '18:00',\n  '19:00',\n  '20:00',\n  '21:00',\n  '22:00',\n];\nexport const occasion = ['Birthday', 'Anniversary'];\n\nexport const initializeTimes = (selectedDate) => {\n    let reservations = JSON.parse(localStorage.getItem('reservations')) || [];\n    const reservedTimes = reservations.filter(reservation => reservation.selectedDate === selectedDate)\n                                      .map(reservation => reservation.selectedTime);\n    const availableTimes = fetchAPI(new Date(selectedDate));\n    let updatedTimes = availableTimes.filter(slot => !reservedTimes.includes(slot));\n    return updatedTimes;\n  };\n\nconst timesReducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_TIMES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default function Main() {\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedOccasion, setSelectedOccasion] = useState('');\n  const [selectedNumber, setSelectedNumber] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n\n  const [availableTimes, dispatchTimes] = useReducer(timesReducer, []);\n  const navigate = useNavigate();\n  const [isLoading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [dateError, setDateError] = useState('');\n  const [timeError, setTimeError] = useState('');\n  const [numberError, setNumberError] = useState('');\n  const [occasionError, setOccasionError] = useState('');\n  const { username } = useContext(UserContext)\n  const { signInStatus } = useContext(UserContext);\n\n  useEffect(() => {\n    const updatedTimes = initializeTimes(selectedDate);\n    dispatchTimes({ type: 'UPDATE_TIMES', payload: updatedTimes });\n  }, [selectedDate]);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if (!signInStatus) {\n        alert('You must be signed in to make a reservation.');\n        return;\n      }\n\n\n    const formData = {\n      selectedDate,\n      selectedTime,\n      selectedNumber,\n      selectedOccasion,\n    };\n    // use username as a key to store the booking\n    let reservations = JSON.parse(localStorage.getItem(`${username}-reservations`)) || [];\n    if (submitAPI(formData)) {\n      reservations.push(formData);\n      localStorage.setItem(`${username}-reservations`, JSON.stringify(reservations));\n    } else {\n      alert('Reservation failed. Please try again.')\n    }\n    console.log(formData);\n    submitAPI(formData);\n\n    setLoading(true);\n    setProgress(0);\n\n    const interval = setInterval(() => {\n      setProgress((prevProgress) => {\n        const newProgress = prevProgress + 10;\n        if (newProgress === 100) {\n          clearInterval(interval);\n          setLoading(false);\n          navigate('/bookingpage/confirmation', { state: formData });\n        }\n        return newProgress;\n      });\n    }, 200);\n\n    setTimeout(() => {\n      clearInterval(interval);\n      setLoading(false);\n      navigate('/bookingpage/confirmation', { state: formData });\n    }, 2000); // wait 2 seconds before navigating\n  };\n\n  const updateTimes = (date) => {\n    const updatedTimes = initializeTimes(date);\n    dispatchTimes({ type: 'UPDATE_TIMES', payload: updatedTimes });\n  };\n  const validateForm = (e) => {\n    e.preventDefault();\n    setDateError('');\n    setTimeError('');\n    setNumberError('');\n    setOccasionError('');\n\n    let hasError = false;\n\n    if (!selectedDate) {\n      setDateError('Please select a date.');\n      hasError = true;\n    }\n\n    if (!selectedTime) {\n      setTimeError('Please select a time.');\n      hasError = true;\n    }\n\n    if (!selectedNumber) {\n      setNumberError('Please enter the number of guests.');\n      hasError = true;\n    }\n\n    if (!selectedOccasion) {\n      setOccasionError('Please select an occasion.');\n      hasError = true;\n    }\n\n    if (hasError) {\n      return;\n    }\n\n    submitForm(e);\n  }\n\n  const isFormValid = selectedDate && selectedTime && selectedNumber && selectedOccasion;\n\n  return (\n    <div>\n      <BookingForm\n        timeSlots={timeSlots}\n        availableTimes={availableTimes}\n        selectedTime={selectedTime}\n        setSelectedTime={setSelectedTime}\n        setAvailableTimes={updateTimes}\n        selectedDate={selectedDate}\n        setSelectedDate={setSelectedDate}\n        selectedOccasion={selectedOccasion}\n        setSelectedOccasion={setSelectedOccasion}\n        selectedNumber={selectedNumber}\n        setSelectedNumber={setSelectedNumber}\n        submitForm={submitForm}\n        occasion={occasion}\n        isLoading={isLoading}\n        progress={progress}\n        dateError={dateError}\n        setDateError={setDateError}\n        timeError={timeError}\n        setTimeError={setTimeError}\n        numberError={numberError}\n        setNumberError={setNumberError}\n        occasionError={occasionError}\n        setOccasionError={setOccasionError}\n        isFormValid={isFormValid}\n        validateForm={validateForm}\n      />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}